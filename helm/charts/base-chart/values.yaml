replicaCount: 1

image:
  repository: 932213950603.dkr.ecr.us-east-1.amazonaws.com/config-server
  tag: latest
  pullPolicy: Always

nameOverride: ""

serviceAccount:
  create: true
  # awsRole: "AwsRoleName"
  # awsAccount: "111222333444"

clusterRole:
  enabled: false
  # name: role-name
  # rules:
  #   - apiGroups: [""]
  #     resources: ["pods", "replicasets", "deployments", "daemonsets"]
  #     verbs: ["get", "list", "patch", "watch"]
  #   - apiGroups: ["apps"]
  #     resources: ["replicasets", "deployments", "daemonsets"]
  #     verbs: ["get", "list", "patch", "watch"]

clusterRoleBinding:
  enabled: false
  # name: role-name-binding
  # roleName: role-name
  # serviceAccountName: serviceaccount-name
  # namespace: serviceaccount-namespace

deployment:
  labels:
    version: v1
  # annotations:
  #   key: value
  terminationGracePeriodSeconds: 30
  readinessProbe:
    enabled: false
    path: '/actuator/health'
    port: 8080
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  livenessProbe:
    enabled: false
    path: '/actuator/health'
    port: 8080
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  # lifecycleHooks: {}
  lifecycleHooks:
    preStop:
      exec:
        command: [ 'sleep', '10' ]

securityContext:
  enabled: false
  # userId: 1000
  # groupId: 1337
  ## disabled during java debug
  # readOnlyRootFilesystem: false

extraEnv:
  # SPRING_PROFILES_ACTIVE: dev

#Configuration for java microservices
javaConfig:
  enabled: true
  # should be set with suffix 'M'
  heapSize: "300M"
  # -- JAVA_OPTS env variable.  Ex. - "-Param1"
  JAVA_OPTS:
  #  - "-Param2"
  #  - "-XX:+HeapDumpOnOutOfMemoryError"
  #  - "-XX:HeapDumpPath=/heapdump/heapdump.bin"

  # -- JMX_OPTS env variable.  Ex. - "-DParam1"
  JMX_OPTS: [ ]
  #  - "-DParam1"
  #  - "-DParam2"

sidecars: [ ]
  # - name: sidecar
  #   image: busybox
  #   command: ["sh", "-c", "tail -f /dev/null"]
  #   volumeMounts:
  #   - name: heap-dump
  #     mountPath: /heapdump

externalSecret:
  enabled: false

podDisruptionBudget:
  enabled: false

service:
  serverPort: 8181
  serverPortName: http
  managementPort: 8080
  managementPortName: http-management
  labels:
    version: v1
  # annotations:
  #   key: value
  type: ClusterIP

ingress:
  enabled: false
  className: internal
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  paths: /
  # Array of ingress hosts.
  hosts:
    - base-chart.example.com

autoscaler:
  enabled: false
  autoscaleMin: 1
  autoscaleMax: 5
  cpu:
    targetAverageUtilization: "80"
  memory:
    # targetAverageValue: "1000M"
    targetAverageUtilization: "80"



resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits: 
    cpu: 2000m
    # memory: 1500M
  requests:
    cpu: 50m
    # memory: 50M

deploymentStrategy:
  rollingUpdate:
    maxSurge: 0
    maxUnavailable: 1
  type: RollingUpdate

nodeSelector: { }

tolerations: [ ]

affinity:
  enabled: true
  # should be either
  # `kubernetes.io/hostname` or `failure-domain.beta.kubernetes.io/zone`
  topologyKey: "kubernetes.io/hostname"

dbmigration:
  enabled: false
  image: 
    repository: 932213950603.dkr.ecr.us-east-1.amazonaws.com/recs-migration
    pullPolicy: Always

configmap:
  enabled: false
  mountPath: /path/to/config
  data:
    my-config.yaml: |
      exampleKey: exampleValue
  binaryData:
    enabled: false
    files:
      my-binary-file.bin: <base64-encoded-data>